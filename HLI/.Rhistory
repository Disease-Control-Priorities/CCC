#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.Baseline = sum(DALYS.Baseline),
DALYS.Adjusted = sum(DALYS.Adjusted),
DALYS.avert = sum(DALYS.avert)
)%>%
mutate(discount.rate = ((1-0.05)^(year_id-2022)),
discount.rate = ifelse(year_id<2023,1,discount.rate),
Baseline.cost = (Baseline.cost*discount.rate),
Adjusted.cost = (Adjusted.cost*discount.rate),
Incremental.cost = (Incremental.cost*discount.rate),
DALYS.Baseline = (DALYS.Baseline*discount.rate),
DALYS.Adjusted = (DALYS.Adjusted*discount.rate),
DALYS.avert = (DALYS.avert*discount.rate)
)%>%na.omit()%>%
group_by(location_name, Code, Intervention)%>%
summarise(Incremental.cost = sum(Incremental.cost),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert)
)%>%
mutate(Incremental.cost = ifelse(Deaths.avert==0, 0, Incremental.cost),
ICER = Incremental.cost/DALYS.avert)
any(is.na(df))
unique(df$location_name)
write.csv(df, "figures/HLI_CEA_country.csv", row.names = F)
gdp<-read.csv("../new_inputs/gdp_pc.csv", stringsAsFactors = F, skip=4)%>%
pivot_longer(X1960:X2021) %>%
group_by(Country.Code) %>%
fill(value, .direction = "down") %>%
pivot_wider(Country.Code)%>%
select(Country.Code, X2021)%>%
rename(iso3 = Country.Code, gdp_pc = X2021)
library(forcats)
fig1<-left_join(df, WB)%>%
filter(Code<5)%>%
left_join(., gdp)%>%
group_by(HSP, Intervention)%>%
summarise(gdp_pc = median(gdp_pc, na.rm=T),
DALYs.averted = sum(DALYS.avert),
Incremental.cost = sum(Incremental.cost))%>%
mutate(ICER = Incremental.cost/DALYs.averted)%>%
arrange(HSP)%>%
mutate(perc = ICER/gdp_pc,
color = ifelse(perc<0.1, "<0.1",
ifelse(perc<0.5 & perc>=0.1, "0.1-0.5",
ifelse(perc>=0.5 & perc<1.0, "0.5-1.0",
ifelse(perc<2.3 & perc>=1.0, "1.0-2.3", ">2.3")))))%>%
na.omit()%>%
mutate(color = ifelse(HSP=="conflict" & Intervention=="PCI for ACS", ">2.3", color))%>%
mutate(color = factor(color, levels=c("<0.1", "0.1-0.5", "0.5-1.0", "1.0-2.3", ">2.3")),
name = fct_reorder(as.factor(Intervention), desc(ICER)))%>%
mutate(HSP = ifelse(HSP=="fragile", "Fragile", HSP),
HSP = ifelse(HSP=="conflict", "Conflict", HSP))%>%
arrange(ICER)
fig1.all<-left_join(df, WB)%>%
filter(Code<5)%>%
left_join(., gdp)%>%
group_by(Intervention)%>%
summarise(gdp_pc = median(gdp_pc, na.rm=T),
DALYs.averted = sum(DALYS.avert),
Incremental.cost = sum(Incremental.cost))%>%
mutate(ICER = Incremental.cost/DALYs.averted)%>%
mutate(perc = ICER/gdp_pc,
color = ifelse(perc<0.1, "<0.1",
ifelse(perc<0.5 & perc>=0.1, "0.1-0.5",
ifelse(perc>=0.5 & perc<1.0, "0.5-1.0",
ifelse(perc<2.3 & perc>=1.0, "1.0-2.3", ">2.3")))))%>%
na.omit()%>%
mutate(color = factor(color, levels=c("<0.1", "0.1-0.5", "0.5-1.0", "1.0-2.3", ">2.3")),
name = fct_reorder(as.factor(Intervention), desc(ICER)))%>%
mutate(HSP = "All countries")
ggplot(fig1,
aes(x=HSP, y=reorder(name, -ICER), fill=color))+
geom_tile()+
theme_classic()+
theme(axis.text.x=element_text(size=12, angle=45, hjust=0),
axis.text.y=element_text(size=12))+
scale_fill_manual(values=c("#337599","#99B8BD", "#FFEE9C","#faa175","#f8696b"))+
scale_x_discrete(position="top")+
labs(fill="ICER (as a proportion \nof GDP per capita)")+
theme(axis.title.x=element_blank(),axis.title.y=element_blank())+
geom_text(label = paste0( "$", signif(fig1$ICER, digits=2)))
ggsave("figures/Figure1.png", height = 10, width = 12, units = "in")
write.csv(cost%>%filter(location_name %in% all.locs), "output/all_costs.csv", row.names = F)
#BCRs for intersectoral policies
ccc.vsl<-read.csv("../DALY_value.csv", stringsAsFactors = F)%>%
gather(year_id, val, -wb2021)%>%
mutate(year_id = as.numeric(gsub("X","",year_id)),
wb2021 = ifelse(wb2021=="UMC", "UMIC", wb2021))
unique(ccc.vsl$wb2021)
df<-left_join(df, WB)
unique(df$wb2021)
df.bcr<-left_join(df, ccc.vsl)%>%
filter(year_id>=2023)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)%>%
group_by(Code, Intervention, HSP)%>%
summarise(
Incremental.cost = sum(Incremental.cost, na.rm=T),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert, na.rm=T),
Gross.benefits = sum(Gross.benefits, na.rm=T),
Forgone.surplus = sum(Forgone.surplus, na.rm=T))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)%>%
filter(Code>5)
write.csv(df.bcr, "figures/BCR_calcs.csv", row.names = F)
table3<-df.bcr%>%select(HSP, Intervention, BCR)%>%
mutate(BCR = signif(BCR, digits=2))%>%
spread(HSP, BCR)%>%
arrange(conflict)
write.csv(table3, "figures/Table3.csv", row.names = F)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)%>%
ungroup()%>%
group_by(Code, HSP, year_id)%>%
summarise(
Incremental.cost = (Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = (Deaths.avert),
DALYS.avert = (DALYS.avert),
Gross.benefits = (Gross.benefits),
Forgone.surplus = (Forgone.surplus))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)%>%
select(-iso3, -wb2021, -wb2023)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
ungroup()%>%
group_by(Code, HSP, year_id)%>%
summarise(
Incremental.cost = (Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = (Deaths.avert),
DALYS.avert = (DALYS.avert),
Gross.benefits = (Gross.benefits),
Forgone.surplus = (Forgone.surplus))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
group_by(Code, HSP, year_id)%>%
summarise(
Incremental.cost = (Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = (Deaths.avert),
DALYS.avert = (DALYS.avert),
Gross.benefits = (Gross.benefits),
Forgone.surplus = (Forgone.surplus))
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
group_by(Code, HSP, year_id)%>%
dplyr::summarise(
Incremental.cost = (Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = (Deaths.avert),
DALYS.avert = (DALYS.avert),
Gross.benefits = (Gross.benefits),
Forgone.surplus = (Forgone.surplus))
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
arrange(year_id)
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
arrange(year_id)
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
arrange(year_id)%>%
group_by(Code, HSP, year_id)%>%
summarise(
Incremental.cost = sum(Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert),
Gross.benefits = sum(Gross.benefits),
Forgone.surplus = sum(Forgone.surplus))
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
arrange(year_id)%>%
group_by(Code, HSP, year_id)%>%
summarise(
Incremental.cost = sum(Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert),
Gross.benefits = sum(Gross.benefits),
Forgone.surplus = sum(Forgone.surplus))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
arrange(year_id)%>%
group_by(Code, HSP, year_id)%>%
summarise(
Incremental.cost = cumsum(Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = cumsum(Deaths.avert),
DALYS.avert = cumsum(DALYS.avert),
Gross.benefits = cumsum(Gross.benefits),
Forgone.surplus = cumsum(Forgone.surplus))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
arrange(year_id)%>%
group_by(Code, HSP, year_id)%>%
summarise(
Incremental.cost = sum(Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert),
Gross.benefits = sum(Gross.benefits),
Forgone.surplus = sum(Forgone.surplus))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)
View(df.bcr2)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
group_by(Code, HSP, year_id)%>%
summarise(
Incremental.cost = sum(Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert),
Gross.benefits = sum(Gross.benefits),
Forgone.surplus = sum(Forgone.surplus))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)%>%
group_by(Code, HSP)%>%
arrange(year_id)%>%
mutate(cumulative.benefits = cumsum(Gross.benefits))
View(df.bcr2)
=87+93.6
87+93.6
181+100
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
group_by(Code, HSP, year_id)%>%
summarise(
Incremental.cost = sum(Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert),
Gross.benefits = sum(Gross.benefits),
Forgone.surplus = sum(Forgone.surplus))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)%>%
group_by(Code, HSP)%>%
arrange(year_id)%>%
mutate(cumulative.benefits = cumsum(Gross.benefits),
cumulative.surplus = cumsum(Forgone.surplus),
cumulative.cost = cumsum(Incremental.cost))%>%
ungroup()%>%
mutate(cBCR = cumulative.benefits/(cumulative.surplus+cumulative.cost))
View(df.bcr2)
ggplot(plot, aes(x=year_id, y=cBCR, color=Intervention))+
geom_line()+
facet_wrap(~HSP)
ggplot(df.bcr2, aes(x=year_id, y=cBCR, color=Intervention))+
geom_line()+
facet_wrap(~HSP)
df.bcr2<-left_join(df, ccc.vsl, relationship = "many-to-many")%>%
filter(Code>5)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
filter(year_id>=2023 & year_id<=2050)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus))%>%
group_by(Code,Intervention, HSP, year_id)%>%
summarise(
Incremental.cost = sum(Incremental.cost),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert),
Gross.benefits = sum(Gross.benefits),
Forgone.surplus = sum(Forgone.surplus))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)%>%
group_by(Code, Intervention, HSP)%>%
arrange(year_id)%>%
mutate(cumulative.benefits = cumsum(Gross.benefits),
cumulative.surplus = cumsum(Forgone.surplus),
cumulative.cost = cumsum(Incremental.cost))%>%
ungroup()%>%
mutate(cBCR = cumulative.benefits/(cumulative.surplus+cumulative.cost))
ggplot(df.bcr2, aes(x=year_id, y=cBCR, color=Intervention))+
geom_line()+
facet_wrap(~HSP)
ggsave("figures/troubleshoot_BCRs.jpeg", height=6, width=6)
ggplot(df.bcr2, aes(x=year_id, y=cBCR, color=Intervention))+
geom_smooth(se=FALSE)+
facet_wrap(~HSP)
ggsave("figures/troubleshoot_BCRs.jpeg", height=6, width=6)
ggplot(df.bcr2, aes(x=year_id, y=BCR, color=Intervention))+
geom_smooth(se=FALSE)+
facet_wrap(~HSP)
ggplot(df.bcr2, aes(x=year_id, y=cBCR, color=Intervention))+
geom_smooth(se=FALSE)+
facet_wrap(~HSP)
ggplot(df.bcr2, aes(x=year_id, y=BCR, color=Intervention))+
geom_smooth(se=FALSE)+
facet_wrap(~HSP)
ggsave("figures/troubleshoot_BCRs.jpeg", height=6, width=6)
df.bcr<-left_join(df, ccc.vsl)%>%
filter(year_id>=2023)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)%>%
group_by(Code, Intervention, HSP)%>%
summarise(
Incremental.cost = sum(Incremental.cost, na.rm=T),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert, na.rm=T),
Gross.benefits = sum(Gross.benefits, na.rm=T),
Forgone.surplus = sum(Forgone.surplus, na.rm=T))%>%
ungroup()%>%
mutate(BCR = Gross.benefits / (Forgone.surplus+Incremental.cost),
BCR.without.surplus = Gross.benefits/Incremental.cost)%>%
arrange(HSP, -BCR)%>%
filter(Code>5)
write.csv(df.bcr, "figures/BCR_calcs.csv", row.names = F)
table3<-df.bcr%>%select(HSP, Intervention, BCR)%>%
mutate(BCR = signif(BCR, digits=2))%>%
spread(HSP, BCR)%>%
arrange(conflict)
View(table3)
write.csv(table3, "figures/Table3.csv", row.names = F)
df.bcr<-left_join(df, ccc.vsl)%>%
filter(year_id>=2023)%>%
ungroup()%>%
select(-iso3, -wb2021, -wb2023, -location_name, -ICER)%>%
mutate(Gross.benefits = val*DALYS.avert,
Forgone.surplus = ifelse(Code%in%c(5.1,5.2,5.3,5.4), (Gross.benefits*0.009), 0), #consumer surplus
Forgone.surplus = ifelse(Code %in% c(5.5,5.6), (Gross.benefits*0.001), Forgone.surplus)
)%>%
group_by(Code, Intervention, HSP)%>%
summarise(
Incremental.cost = sum(Incremental.cost, na.rm=T),
#Deaths.Baseline = sum(Deaths.Baseline),
#Deaths.Adjusted = sum(Deaths.Adjusted),
Deaths.avert = sum(Deaths.avert),
DALYS.avert = sum(DALYS.avert, na.rm=T),
Gross.benefits = sum(Gross.benefits, na.rm=T),
Forgone.surplus = sum(Forgone.surplus, na.rm=T))
View(df.bcr)
