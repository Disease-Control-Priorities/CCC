filter(!is.na(NCD_region) & Country != "")  %>%
select(iso3) %>% left_join(locs, by = "iso3") %>% distinct()
countries   <- country.lab %>% pull(location_name) %>% sort() %>% unique()
cse_g         <-  readxl::read_excel("new_inputs/GBDtoGHE.xlsx") %>%
rename(ncd_cause = NCD4, cause_name=gbd, aff_frac = "affected fraction", ghe_cause = ghe) %>%
select(ncd_cause, cause_name, ghe_cause, aff_frac) %>%
filter(!is.na(aff_frac)) %>% distinct()
format.ghe <- function(df){
df %>%
select(DIM_COUNTRY_CODE, DIM_YEAR_CODE, DIM_AGEGROUP_CODE, DIM_SEX_CODE,
DIM_GHECAUSE_TITLE, VAL_DEATHS_COUNT_NUMERIC) %>%
rename(iso3=DIM_COUNTRY_CODE, year=DIM_YEAR_CODE, age_cat=DIM_AGEGROUP_CODE,
sex=DIM_SEX_CODE, ghe_cause=DIM_GHECAUSE_TITLE, deaths=VAL_DEATHS_COUNT_NUMERIC) %>%
mutate(sex_name = ifelse(sex=="MLE", "Male", "Female")) %>%
filter(ghe_cause %in% unique(cse_g$ghe_cause)) %>%
right_join(data.table(age_cat = c("YEARS0-1", rep("YEARS1-4", each = 4),
rep(paste0("YEARS",seq(5,80,5),"-",seq(5,80,5)+4), each=5), "YEARS85PLUS"),
age_name = 0:85,
sc_obs = c(1, rep(0.25, each = 4), rep(0.2, each=80), 1)), by = "age_cat") %>%
mutate(deaths = deaths * sc_obs, sc_obs = NULL, age_cat = NULL, sex = NULL)
}
ghe.in           <- rbind(fread("new_inputs/ghe data/data_2010.csv"),
fread("new_inputs/ghe data/data_2015.csv"),
fread("new_inputs/ghe data/data_2019.csv")) %>%
format.ghe() %>%
mutate(All = ifelse(ghe_cause == "All Causes", deaths, 0)) %>%
group_by(iso3, year, sex_name, age_name) %>%
mutate(All = sum(All, na.rm = T)) %>% ungroup() %>%
mutate(frac = deaths/All, All = NULL, deaths = NULL) %>%
left_join(locs, by = "iso3") %>%
right_join(cse_g %>% select(ghe_cause, cause_name, aff_frac), by = "ghe_cause") %>%
mutate(cause_frac = frac*aff_frac, aff_frac = NULL, ghe_cause = NULL, frac = NULL)
coverage      <- fread("new_inputs/Coverage0621.csv")%>%
select(-X2.1)%>%
rename(X2.1=X2.10)
efficacy      <- readxl::read_excel("new_inputs/DCP3_ NCD Data (2).xlsx", sheet='interventions') %>%
rename(Code=NCD, agel = `start age`, ageu = `stop age`) %>%
mutate(cause_name= ifelse(Level4 != "NA", `Level4`, `Level3`),
ageu = ifelse(ageu=="95+","85",ageu),
ageu = as.numeric(ageu),
agel = as.numeric(agel),
ageu = ifelse(ageu>85,85,ageu))
efficacy2     <- efficacy %>%
select(Intervention, Code,  sub_id, metric, cause_name, `Mortality reduction`, agel, ageu) %>%
filter(!is.na(ageu)) %>%
left_join(cse_g, by = "cause_name") %>%
mutate(Code = ifelse(is.na(`Mortality reduction`), "NoCode", Code),
sub_id = ifelse(is.na(`Mortality reduction`), 1, sub_id),
`Mortality reduction` = ifelse(is.na(`Mortality reduction`), 0, `Mortality reduction`),
agel = ifelse(is.na(agel), 0, agel), ageu = ifelse(is.na(ageu), 85, ageu),
aff_frac = NULL, codex = paste0(Code,"0")) %>%
mutate(codex = ifelse(codex=="2.140", "2.14", codex))
cov.df        <- coverage %>%
select(-c(WB_region15, GBD_region, Country, LocID)) %>% distinct() %>%
gather(codex, `Baseline (P0)`, -iso3) %>%
mutate(codex = paste0(substring(codex, 2),"0")) %>%
mutate(codex = ifelse(codex=="2.140", "2.14", codex))
int.df     <- cov.df %>% filter(codex %in% unique(efficacy2$codex)) %>%
left_join(efficacy2, by = "codex") %>%
filter(!is.na(`Mortality reduction`) & cause_name != "NA") %>% distinct() %>%
mutate(max.cov = 0.95) %>%
rename(`Baseline Coverage` =`Baseline (P0)`) %>% select(-c(codex)) %>%
arrange(iso3, Code, sub_id) %>% right_join(country.lab, by = "iso3")
all.mx     <- ghe.in %>%
mutate(cause = ifelse(cause_name=="All Causes", "All", "NCD")) %>%
group_by(location_name, iso3, sex_name, age_name, year, cause) %>%
summarise(frac = sum(cause_frac, na.rm = T), .groups = "drop") %>% ungroup() %>%
filter(year %in% c(2010, 2015, 2019)) %>%
left_join(wpp.in %>% select(iso3, sex_name, age_name, year, mx),
by = c("iso3", "sex_name", "age_name", "year")) %>%
mutate(mx = frac*mx, frac = NULL) %>%
spread(cause, mx) %>%
mutate(nonNCD = All - NCD, All = NULL) %>%
gather(cause_name, mx, -location_name, -iso3, -sex_name, -age_name, -year) %>%
spread(year, mx) %>%
mutate(bg_trend = ifelse((`2010` == 0 & `2015` == 0) | `2019` == 0, 0,
ifelse(`2010` == 0 & `2015`!= 0 & `2019`!= 0,
1/4*log(`2019`/`2015`),
1/9*log(`2019`/`2010`)))) %>%
select(-c("2010", "2015")) %>% rename(mx = "2019")
all.mx     <- ghe.in %>%
group_by(location_name, iso3, sex_name, age_name, year, cause_name) %>%
summarise(frac = sum(cause_frac, na.rm = T), .groups = "drop") %>% ungroup() %>%
filter(year %in% c(2010, 2015, 2019)) %>%
left_join(wpp.in %>% select(iso3, sex_name, age_name, year, mx),
by = c("iso3", "sex_name", "age_name", "year")) %>%
mutate(mx = frac*mx, frac = NULL) %>%
spread(year, mx) %>%
mutate(bg_trend = ifelse((`2010` == 0 & `2015` == 0) | `2019` == 0, 0,
ifelse(`2010` == 0 & `2015`!= 0 & `2019`!= 0,
1/4*log(`2019`/`2015`),
1/9*log(`2019`/`2010`)))) %>%
select(-c("2010", "2015")) %>% rename(mx = "2019") %>%
rbind(all.mx)
cause.mx     <- ghe.in %>%
filter(cause_name!="All Causes" & year %in% c(2010, 2015, 2019)) %>%
left_join(wpp.in %>% select(iso3, sex_name, age_name, year, mx),
by = c("iso3", "sex_name", "age_name", "year")) %>%
mutate(mx = cause_frac*mx, cause_frac = NULL) %>%
arrange(iso3, year, cause_name, sex_name, age_name)
unique(cause.mx$cause_name)
salt_eff  <- fread("new_inputs/salt_policy_effects.csv") %>%
rename(cause_name=Outcome) %>%
filter(!is.na(cause_name)) %>%
select(iso3, cause_name, Mortality.reduction) %>%
spread(cause_name, Mortality.reduction) %>%
gather(cause_name, Mortality.reduction, -iso3) %>%
mutate(Mortality.reduction = ifelse(is.na(Mortality.reduction), 0, Mortality.reduction)) %>%
#mutate(salt_impact = 1 - Mortality.reduction) %>%
rename("Mortality reduction" = Mortality.reduction)%>%
select(iso3, cause_name, `Mortality reduction`) %>%
left_join(country.lab, by = "iso3")%>%
mutate(Code = 5.5, `Baseline Coverage` = 0, Intervention='Salt policy',
agel = 0, ageu = 85, max.cov=1)%>%
group_by(location_name)%>%mutate(sub_id = row_number())%>%ungroup()%>%
left_join(., fread("new_inputs/saltcoverage_simplified.csv")%>%select(iso3, mort.redux, target.coverage))%>%
mutate(`Mortality reduction` = mort.redux*(0.039/0.0566))%>%
select(-mort.redux)
salt_eff<-na.omit(left_join(salt_eff, cse_g, by="cause_name")%>%mutate(`Mortality reduction` = `Mortality reduction`*aff_frac)%>%
select(-c(aff_frac)))
tf_eff  <- fread("new_inputs/tfa_policy_effects_simplified.csv") %>%
rename(cause_name=Outcome) %>%
filter(!is.na(cause_name)) %>%
select(iso3, cause_name, mort.redux.filled) %>%
spread(cause_name, mort.redux.filled) %>%
gather(cause_name, mort.redux.filled, -iso3) %>%
mutate(mort.redux.filled = ifelse(is.na(mort.redux.filled), 0, mort.redux.filled)) %>%
#mutate(transfat_impact = 1 - Mortality.reduction) %>%
rename("Mortality reduction" = mort.redux.filled)%>%
select(iso3, cause_name, `Mortality reduction`) %>%
left_join(country.lab, by = "iso3")%>%
mutate(Code = 5.6, `Baseline Coverage` = 0, Intervention='Tans fat policy',
agel = 0, ageu = 85, max.cov=1)%>%
group_by(location_name)%>%mutate(sub_id = row_number())%>%ungroup()
tf_eff<-na.omit(left_join(tf_eff, cse_g, by="cause_name")%>%mutate(`Mortality reduction` = `Mortality reduction`*aff_frac)%>%
select(-c(aff_frac)))%>%mutate(target.coverage=1)
ta_eff  <- fread("new_inputs/tobaccoandalcohol_efficacy6_simplified.csv") %>%
filter(NCD4 == "yes") %>% rename(cause_name = Outcome, risk = Risk) %>%
mutate(iso3 = countrycode::countrycode(Country, "country.name", "iso3c")) %>%
select(iso3, cause_name, Mortality.reduction.policy, Mortality.reduction.tax, risk)  %>%
filter(cause_name %in% c("All Causes", cse_g$cause_name)) %>%
left_join(country.lab, by = "iso3")
ta_delay<- readxl::read_excel("new_inputs/TobaccoAlcoholDelayedImpact.xlsx") %>%
rename(year_id = Year) %>%
gather(Link, delay, -year_id) %>%
spread(year_id, delay) %>%
mutate(`2031` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2030`) - logit(`2029`))),
`2032` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2031`) - logit(`2030`))),
`2033` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2032`) - logit(`2031`))),
`2034` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2033`) - logit(`2032`))),
`2035` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2034`) - logit(`2033`))),
`2036` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2035`) - logit(`2034`))),
`2037` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2036`) - logit(`2035`))),
`2038` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2037`) - logit(`2036`))),
`2039` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2038`) - logit(`2037`))),
`2040` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2039`) - logit(`2038`)))) %>%
gather(year_id, delay, -Link) %>% mutate(year_id = as.numeric(year_id)) %>%
arrange(Link, year_id)
ta_delay<- fread("new_inputs/CauseLinkforTobAlcDelay.csv") %>%
rename(cause_name = `GBD Cause`, risk = "Risk factor") %>%
left_join(ta_delay, by = "Link") %>% mutate(ic = year_id - 2018) %>%
select(cause_name, risk, ic, delay) %>% spread(ic, delay) %>%
mutate(`1` = 0,`2` = 0,`3` = 0,`4` = 0) %>%
gather(ic, delay, -cause_name, -risk) %>% mutate(ic = as.numeric(ic)) %>%
arrange(cause_name, risk, ic) %>%
spread(risk, delay) %>% rename(Smoking = Tobacco) %>%
mutate(Alcohol = ifelse(is.na(Alcohol), 0, Alcohol),
Smoking = ifelse(is.na(Smoking), 0, Smoking)) %>%
filter(cause_name %in% c("All Causes", cse_g$cause_name))
tobp_eff <- ta_eff %>% filter(!is.na(location_name), risk=="Smoking") %>%
select(iso3, cause_name, Mortality.reduction.policy) %>%
rename(`Mortality reduction` = Mortality.reduction.policy) %>%
mutate(`Mortality reduction` = ifelse(is.na(`Mortality reduction`), 0, `Mortality reduction`))%>%
select(iso3, cause_name, `Mortality reduction`) %>%
left_join(country.lab, by = "iso3")%>%
mutate(Code = 5.3, `Baseline Coverage` = 0, Intervention='Tobacco policy',
agel = 0, ageu = 85, max.cov=1)%>%
group_by(location_name)%>%mutate(sub_id = row_number())%>%ungroup()%>%
mutate(target.coverage = 1)
tobp_eff<-na.omit(left_join(tobp_eff, cse_g, by="cause_name")%>%mutate(`Mortality reduction` = `Mortality reduction`*aff_frac)%>%
select(-c(aff_frac)))
tobt_eff <- ta_eff %>% filter(!is.na(location_name), risk=="Smoking") %>%
select(iso3, cause_name, Mortality.reduction.tax) %>%
rename(`Mortality reduction` = Mortality.reduction.tax) %>%
mutate(`Mortality reduction` = ifelse(is.na(`Mortality reduction`), 0, `Mortality reduction`))%>%
select(iso3, cause_name, `Mortality reduction`) %>%
left_join(country.lab, by = "iso3")%>%
mutate(Code = 5.1, `Baseline Coverage` = 0, Intervention='Tobacco tax',
agel = 0, ageu = 85, max.cov=1)%>%
group_by(location_name)%>%mutate(sub_id = row_number())%>%ungroup()
tobt_eff<-na.omit(left_join(tobt_eff, cse_g, by="cause_name")%>%mutate(`Mortality reduction` = `Mortality reduction`*aff_frac)%>%
select(-c(aff_frac)))%>%mutate(target.coverage = ifelse(`Mortality reduction`==0,0,1))
aclp_eff <- ta_eff %>% filter(!is.na(location_name), risk=="Alcohol") %>%
select(iso3, cause_name, Mortality.reduction.policy) %>%
rename(`Mortality reduction` = Mortality.reduction.policy) %>%
mutate(`Mortality reduction` = ifelse(is.na(`Mortality reduction`), 0, `Mortality reduction`))%>%
select(iso3, cause_name, `Mortality reduction`) %>%
left_join(country.lab, by = "iso3")%>%
mutate(Code = 5.4, `Baseline Coverage` = 0, Intervention='Alcohol policy',
agel = 0, ageu = 85, max.cov=1)%>%
group_by(location_name)%>%mutate(sub_id = row_number())%>%ungroup()
aclp_eff<-na.omit(left_join(aclp_eff, cse_g, by="cause_name")%>%mutate(`Mortality reduction` = `Mortality reduction`*aff_frac)%>%
select(-c(aff_frac)))%>%mutate(target.coverage=1)
aclt_eff <- ta_eff %>% filter(!is.na(location_name), risk=="Alcohol") %>%
select(iso3, cause_name, Mortality.reduction.tax) %>%
rename(`Mortality reduction` = Mortality.reduction.tax) %>%
mutate(`Mortality reduction` = ifelse(is.na(`Mortality reduction`), 0, `Mortality reduction`))%>%
select(iso3, cause_name, `Mortality reduction`) %>%
left_join(country.lab, by = "iso3")%>%
mutate(Code = 5.2, `Baseline Coverage` = 0, Intervention='Alcohol tax',
agel = 0, ageu = 85, max.cov=1)%>%
group_by(location_name)%>%mutate(sub_id = row_number())%>%ungroup()
aclt_eff<-na.omit(left_join(aclt_eff, cse_g, by="cause_name")%>%mutate(`Mortality reduction` = `Mortality reduction`*aff_frac)%>%
select(-c(aff_frac)))%>%mutate(target.coverage=1)
#merge with other interventions#
int.df<-rbind(int.df%>%mutate(target.coverage = 1), salt_eff%>%mutate(metric="case fatality"),
tf_eff%>%mutate(metric="case fatality"), tobp_eff%>%mutate(metric="case fatality"),
tobt_eff%>%mutate(metric="case fatality"), aclt_eff%>%mutate(metric="case fatality"),
aclp_eff%>%mutate(metric="case fatality"))
#update baseline coverage assumptions#
int.df<-left_join(int.df, cov.df%>%rename(Code = codex)%>%mutate(Code=as.numeric(Code)))%>%
mutate(`Baseline Coverage` = `Baseline (P0)`)%>%select(-`Baseline (P0)`)
pin.groups <- readxl::read_excel("new_inputs/DCP3_ NCD Data (2).xlsx", sheet='costs') %>%
filter(NCD<=5.6) %>%
rename(Code = NCD) %>% filter(!is.na(Adjustment1)) %>%
rename(cause_name = Epi1, metric_name = Measure1,
age_l = StartAge1, age_u=StopAge1, sex_name=Sex1, Adjustment = Adjustment1) %>%
mutate(age_u = ifelse(age_u=="95+","85",age_u), age_u = as.numeric(age_u), age_l = as.numeric(age_l),
Adjustment = as.numeric(Adjustment)) %>%
select(calc_ICER, Code, sub_id, cause_name, metric_name, age_l, age_u, sex_name, Adjustment)
#might need to add some causes...
#https://vizhub.healthdata.org/gbd-results?params=gbd-api-2019-permalink/7e58e39f315fa0fe393bc75bd3b71be0
library(tidyverse)
add.causes<-fread("new_inputs/new_causes.csv")%>%
mutate(age = str_remove_all(age, " years"),
age = gsub("-", " to ", age),
age = ifelse(age=="85+", "85 plus", age))
pin.data   <- rbind(fread("new_inputs/PIN_heartfailuredata.csv"),
fread("new_inputs/pin_data (2).csv") %>%
mutate(rei = "None")) %>%
bind_rows(., add.causes)%>%
filter(location != "Global" & metric == "Rate" & cause != "All causes" & year == 2019) %>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c")) %>%
right_join(country.lab, by = "iso3") %>%
rename(age_cat = age, cause_name = cause, sex_name = sex) %>%
right_join(data.table(age_cat = c("<1 year", rep("1 to 4", each = 4),
rep(paste0(seq(5,80,5)," to ",seq(5,80,5)+4), each=5), "85 plus"),
age_name = 0:85),
by = "age_cat") %>%
select(location_name, sex_name, age_name, cause_name, measure, val) %>%
mutate(val = val*1e-5) %>% spread(measure, val) %>%
rename(R_inc  = Incidence, R_prev = Prevalence) %>%
mutate(R_inc  = ifelse(is.na(R_inc), 0, R_inc),
R_prev = ifelse(is.na(R_prev), 0, R_prev),
R_pop  = NA) %>%
rbind(wpp.in %>%
filter(year == 2019 & iso3 %in% unique(country.lab$iso3)) %>%
select(location_name, sex_name, age_name) %>%
mutate(cause_name = "All", R_inc = NA, R_prev = NA, R_pop = 1)) %>%
arrange(location_name, cause_name, sex_name, age_name)
age.code <- int.df %>% select(Code, agel, ageu) %>% distinct()
##############################################################################################################
# Ratio of yll to yld to calculate dalys
##############################################################################################################
#https://vizhub.healthdata.org/gbd-results?params=gbd-api-2019-permalink/db58dc39dd2077abc2d50fac17387ae4
addyld<-fread("new_inputs/new_yld.csv")%>%
select(val, cause, measure, location)%>%
spread(measure,val)%>%
rename(YLD = `YLDs (Years Lived with Disability)`,
YLL = `YLLs (Years of Life Lost)`)%>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c"))%>%
right_join(country.lab, by = "iso3")%>%
select(-location)
#update with self-harm YLLs
#https://vizhub.healthdata.org/gbd-results?params=gbd-api-2019-permalink/84b07312d09f5ee6e119b115739ac210
self.harm<- fread("new_inputs/IHME-GBD_2019_DATA-0a3dc000-1.csv")%>%
filter(cause=="Self-harm")%>%
select(location, val)%>%
rename(sh_yll = val)%>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c"))%>%
right_join(country.lab, by = "iso3")%>%
select(-location)
addyld<-addyld%>%
left_join(., self.harm)%>%
mutate(YLL = ifelse(cause=="Bipolar disorder", sh_yll*0.051 ,YLL),
YLL = ifelse(cause=="Major depressive disorder", sh_yll*0.461 ,YLL),
YLL = ifelse(cause=="Schizophrenia", sh_yll*0.047 ,YLL))%>%
select(-sh_yll)
yldyll <- fread("new_inputs/YLDtoYLLratio.csv") %>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c"))%>%
right_join(country.lab, by = "iso3")%>%
select(-location)%>%
bind_rows(., addyld)%>%
rename(cause_name = cause) %>%
mutate(scale = YLD/YLL,
scale = ifelse(is.na(scale),1,scale),
scale = ifelse(cause_name %in% c("Bipolar disorder",
"Major depressive disorder",
"Schizophrenia") & scale>6, 6, scale)) %>%
select(iso3, location_name, cause_name, scale) %>%
filter(cause_name %in% c("All Causes", cse_g$cause_name))
nonNCD.bg <- all.mx %>% filter(cause_name == "nonNCD") %>% arrange(iso3, sex_name, age_name)
NCD.bg    <- all.mx %>% filter(cause_name %!in% c("NCD", "nonNCD")) %>%
arrange(iso3, cause_name, sex_name, age_name)
##############################################################################################################
# COVID data from WHO
##############################################################################################################
covid.df<-fread("covid_df.csv")
drops <- c("ghe.in", "wpp.input", "efficacy", "efficacy2", "tobp_eff", "tobt_eff",
"loc", "locs","coverage", "all.mx", "obs_wpp", "addyld", "add.causes",
"self.harm")
rm(list = c(drops,"drops"))
save.image(file = "new_inputs/PreppedData2023.Rda")
save.image(file = "for_parallel_processing/PreppedData2023.Rda")
###############################################################################################################################
###############################################################################################################################
# Generate output files that can be used to rank the interventions according to ICERs
# https://towardsdatascience.com/parallelization-caveats-in-r-1-the-basics-multiprocessing-and-multithreading-performance-eb584b7e850ehttps://towardsdatascience.com/parallelization-caveats-in-r-1-the-basics-multiprocessing-and-multithreading-performance-eb584b7e850e
rm(list=ls())
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
library(foreach)
library(snow)
library(parallel)
library(iterators)
library(doParallel)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("PreppedData2023.Rda")
source("fxns.R")
###############################################################################################################################
hics<-read.csv("country_groupings.csv", stringsAsFactors = F)%>%
filter(wb2021=="HIC" | wb2021=="UMIC")%>%pull(location_gbd)
#problems with data from Palestine and Puerto Rico
all.locs      <- data.frame(loc=c(countries[c(1:118, 120:126, 128:175)]))
all.locs      <-as.character(all.locs%>%filter(loc%!in%hics)%>%pull(loc)) #77 countries
interventions <-  pin.groups %>% filter(calc_ICER=="yes", Code==1.1) %>% pull(Code) %>% unique() %>% sort()
total         <- length(all.locs)*length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
all.pin.l     <- all.dalys.l <- all.q30.l <-dadt.all.l<- list(total)
parallelCluster <- makeCluster(2, type = "SOCK",methods = FALSE,outfile="log.txt") #ADAM: set how many threads you want to use
quality<-0.7 #ADAM run1
setDefaultCluster(parallelCluster)
registerDoParallel(parallelCluster)
clusterEvalQ(cl = parallelCluster, {
#setMKLthreads(1)    # set each cluster to single thread if worried about thrashing
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
# make sure we load the package on the cluster
#setDTthreads(1)     # set each cluster to single thread if worried about thrashing
})
#set targets#
int.df<- int.df%>%
mutate(target.coverage = `Baseline Coverage`+0.1,
target.coverage = ifelse(target.coverage>1,1,target.coverage),
target.coverage = ifelse(`Baseline Coverage`==1,1,target.coverage))%>%
distinct()
rank_fxn <- function(is,interventions,all.pin.l,all.dalys.l,all.q30.l, dadt.all.l) {
k = 1
for (inter in interventions){
base<-int.df%>%filter(location_name==is, inter==Code)%>%pull(`Baseline Coverage`)%>%unique()
target<-int.df%>%filter(location_name==is, inter==Code)%>%pull(`target.coverage`)%>%unique()
stop_year<-2023
# scale-up parameters, yes/no intersectoral policies, Calc PIN?, 1x covid shock
projection <- project_pop(quality, is, inter, base, target,
"varying", 2022, stop_year,
sel.cse, "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est) #already includes Code
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt) %>% mutate(Code = inter)
k = k + 1
}
return(list(all.pin.l,all.dalys.l,all.q30.l, dadt.all.l))
}
View(int.df)
# Run function
time1<-Sys.time()
everything <- foreach (is = all.locs, .combine ='rbind') %dopar% {
rank_fxn(is,interventions,all.pin.l,all.dalys.l,all.q30.l, dadt.all.l)
}
time2<-Sys.time()
#End timer
time2-time1
#Bind results, each of the (77) countries results stored in a list
all.pin <- rbindlist(everything[[1]])
for (i in 2:77){
temp<-rbindlist(everything[[i]])
all.pin<-rbind(all.pin, temp)
}
all.dalys <- rbindlist(everything[[78]])
for (i in 79:154){
temp<-rbindlist(everything[[i]])
all.dalys<-rbind(all.dalys, temp)
}
all.q30 <- rbindlist(everything[[155]])
for (i in 156:231){
temp<-rbindlist(everything[[i]])
all.q30<-rbind(all.q30, temp)
}
dadt.all <- rbindlist(everything[[232]])
for (i in 233:308){
temp<-rbindlist(everything[[i]])
dadt.all<-rbind(dadt.all, temp)
}
save(all.pin, all.dalys, all.q30, dadt.all, file = "output2.1_base.Rda") #ADAM run1
25*31
775/60
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls()) #Remove all
library(dplyr)
library(ggplot2)
library(readxl)
library(tidyverse)
library(kableExtra)
library(reshape2)
library(stringr)
library(zoo)
'%!in%' <- function(x,y)!('%in%'(x,y))
tradable_conversion <- function(unit_cost, tradable_ratio, currency, global_inflation, exchange){
if(currency == "USD") {
unit_cost*tradable_ratio*global_inflation} else {
((unit_cost*tradable_ratio)/exchange)*global_inflation
}
}
nontradable_conversion <- function(unit_cost,tradable_ratio, currency, cpi_adjust, exchange,country, exchange_end, gni, gni_selected_country){
if(currency == "USD" & (country == "LIC" | country == "LMIC" | country == "LIC+LMIC+UMIC")) {
unit_cost*(1-tradable_ratio)*cpi_adjust*(gni_selected_country/gni)
} else if (currency == "USD" & (country != "LIC" & country != "LMIC" & country != "LIC+LMIC+UMIC")){
((unit_cost*exchange)*(1-tradable_ratio))*cpi_adjust/exchange_end*(gni_selected_country/gni)}
else {
((unit_cost*(1-tradable_ratio)*cpi_adjust)/exchange_end)*(gni_selected_country/gni)
}
}
# Search find "base" and swap for "pesm" and "optm" suffixes. Run 3 times for scenario analysis.
load("for_parallel_processing/output2023_base.Rda")
coverage<-read.csv("new_inputs/Coverage0621.csv", stringsAsFactors = F)
# Unit cost adjustment
uc <- readxl::read_excel("new_inputs/DCP3_ NCD Data (2).xlsx", sheet='costs')%>%
rename(Original.Currency = `Original Currency`,
Cost.adjustment = `Cost adjustment`,
Original.Unit.Cost = `Original Unit Cost`)%>%
select(-notes, -Source, -recalculate, -`...24`, -`...25`, -`...26`, -`...27`, -`...28`)
uc$unique_id <- paste0("C",uc$NCD,"_",uc$sub_id)
#table(uc$unique_id)
uc <- uc %>%filter(Original.Currency != "NA")%>%
mutate(Year = ifelse(Year>2020, 2020, Year))
# Necessary files
# Exchange rate
exchange <- read_xlsx("new_inputs/Exchange_rate.xlsx", na = "..")
exchange<-exchange[,c(1:60)]
ex2<-read_xlsx("new_inputs/Exchange_rate_2020.xlsx", skip=3)
ex2<-ex2[,c(1,61,62)]
exchange<-left_join(exchange, ex2, by="Country")
exchange <- exchange%>%gather(year, value, -Country)%>%group_by(Country)%>%fill(value)%>%spread(year, value)
# Regional inflation
#regional_inflation <- read_xls("../new_inputs/Regional_inflation_20200212.xls", sheet = "Data")
regional_inflation <- read_xls("new_inputs/Regional_inflation_2020.xls", sheet = "Data", skip=3)
#regional_inflation[,c(5:64)] <- (regional_inflation[,c(5:64)]/100)+1
regional_inflation[,c(5:65)] <- (regional_inflation[,c(5:65)]/100)+1
# COUntry grouping
class <- read.csv("new_inputs/Country_groupings.csv")
#Country list: only eligible countries
table(class$NCD_region)
country_list <- class %>%
select(wb2021, NCD_region ,location_gbd, iso3)%>%
rename(Country = location_gbd,
World_bank = wb2021)
# CPI adjusted
cpi <- read.csv("new_inputs/CPI_WB_2018_added2.csv", stringsAsFactors=F)
cpi<-cpi[,-c(66:71)]
#add 2020 data
cpi2<-read.csv("new_inputs/CPI_2020.csv", stringsAsFactors=F)
names(cpi2)[1]<-"Country"
cpi2<-cpi2[,c(1,65)]
cpi<-left_join(cpi, cpi2, by="Country")
cpi <- cpi[,c(3,6:66)]%>%gather(year, value, -Country)%>%group_by(Country)%>%fill(value)%>%spread(year, value)
# GNI
GNI <- read.csv("new_inputs/GNI_WB_USD_2017_re2.csv", stringsAsFactors=F)
GNI<-GNI[,-c(1,4,5,6,66,67,68)]
GNI2 <- read.csv("new_inputs/GNI_2020.csv", stringsAsFactors=F)
GNI2<-GNI2[,c(1,64,65)]
names(GNI2)[1]<-"Country"
GNI<-left_join(GNI, GNI2, by="Country")
GNI <- GNI%>%gather(year, value, -Country, -Country.Code)%>%group_by(Country.Code)%>%fill(value)%>%spread(year, value)
locs<-unique(all.pin$location_name)
country_list<-country_list%>%filter(Country%in% locs, World_bank!="HIC")
locs<-as.character(country_list$Country)
tob<-readxl::read_excel("new_inputs/tobacco_tax_rates.xls", sheet="GLOBAL", skip=5)
View(tob)
tob<-readxl::read_excel("new_inputs/tobacco_tax_rates.xls", sheet="GLOBAL", skip=5)
tob<-tob[,c(4,16,19,20)]
tob<-readxl::read_excel("new_inputs/tobacco_tax_rates.xls", sheet="GLOBAL", skip=5)
tob<-tob[,c(4,17,20,21)]
View(tob)
names(tob)[1]<-"location"
names(tob)[3]<-"new_tax"
names(tob)[4]<-"pack_price"
tob<-tob%>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c"))%>%
left_join(., country_list)%>%
filter(Country %in% locs)%>%
mutate(perc_exise = (new_tax - non_excise)/pack_price)
View(tob)
tob<-readxl::read_excel("new_inputs/tobacco_tax_rates.xls", sheet="GLOBAL", skip=5)
tob<-tob[,c(4,17,20,21)]
names(tob)[1]<-"location"
names(tob)[2]<-"non_excise"
names(tob)[3]<-"new_tax"
names(tob)[4]<-"pack_price"
tob<-tob%>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c"))%>%
left_join(., country_list)%>%
filter(Country %in% locs)%>%
mutate(perc_excise = (new_tax - non_excise)/pack_price)
