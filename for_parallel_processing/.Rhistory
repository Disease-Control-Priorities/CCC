filter(!is.na(cause_name)) %>%
select(iso3, cause_name, Mortality.reduction) %>%
mutate(Mortality.reduction = (0.039/0.0566)*Mortality.reduction)%>%
spread(cause_name, Mortality.reduction) %>%
gather(cause_name, Mortality.reduction, -iso3) %>%
mutate(Mortality.reduction = ifelse(is.na(Mortality.reduction), 0, Mortality.reduction)) %>%
mutate(salt_impact = 1 - Mortality.reduction) %>%
select(iso3, cause_name, salt_impact) %>%
left_join(country.lab, by = "iso3")
tf_eff  <- fread("new_inputs/tfa_policy_effects.csv") %>%
rename(cause_name=Outcome) %>%
filter(!is.na(cause_name)) %>%
select(iso3, cause_name, Mortality.reduction) %>%
spread(cause_name, Mortality.reduction) %>%
gather(cause_name, Mortality.reduction, -iso3) %>%
mutate(Mortality.reduction = ifelse(is.na(Mortality.reduction), 0, Mortality.reduction)) %>%
mutate(transfat_impact = 1 - Mortality.reduction) %>%
select(iso3, cause_name, transfat_impact) %>%
left_join(country.lab, by = "iso3")
ta_eff  <- fread("new_inputs/tobaccoandalcohol_efficacy6.csv") %>%
filter(NCD4 == "yes") %>% rename(cause_name = Outcome, risk = Risk) %>%
mutate(iso3 = countrycode::countrycode(Country, "country.name", "iso3c")) %>%
select(iso3, cause_name, Mortality.reduction.policy, Mortality.reduction.tax, risk)  %>%
filter(cause_name %in% c("All Causes", cse_g$cause_name)) %>%
left_join(country.lab, by = "iso3")
ta_delay<- readxl::read_excel("new_inputs/TobaccoAlcoholDelayedImpact.xlsx") %>%
rename(year_id = Year) %>%
gather(Link, delay, -year_id) %>%
spread(year_id, delay) %>%
mutate(`2031` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2030`) - logit(`2029`))),
`2032` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2031`) - logit(`2030`))),
`2033` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2032`) - logit(`2031`))),
`2034` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2033`) - logit(`2032`))),
`2035` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2034`) - logit(`2033`))),
`2036` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2035`) - logit(`2034`))),
`2037` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2036`) - logit(`2035`))),
`2038` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2037`) - logit(`2036`))),
`2039` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2038`) - logit(`2037`))),
`2040` = ifelse(`2030`== 1, 1, invlogit(2*logit(`2039`) - logit(`2038`)))) %>%
gather(year_id, delay, -Link) %>% mutate(year_id = as.numeric(year_id)) %>%
arrange(Link, year_id)
ta_delay<- fread("new_inputs/CauseLinkforTobAlcDelay.csv") %>%
rename(cause_name = `GBD Cause`, risk = "Risk factor") %>%
left_join(ta_delay, by = "Link") %>% mutate(ic = year_id - 2018) %>%
select(cause_name, risk, ic, delay) %>% spread(ic, delay) %>%
mutate(`1` = 0,`2` = 0,`3` = 0,`4` = 0) %>%
gather(ic, delay, -cause_name, -risk) %>% mutate(ic = as.numeric(ic)) %>%
arrange(cause_name, risk, ic) %>%
spread(risk, delay) %>% rename(Smoking = Tobacco) %>%
mutate(Alcohol = ifelse(is.na(Alcohol), 0, Alcohol),
Smoking = ifelse(is.na(Smoking), 0, Smoking)) %>%
filter(cause_name %in% c("All Causes", cse_g$cause_name))
ta_eff <- ta_eff %>% filter(!is.na(location_name)) %>%
select(location_name, cause_name, Mortality.reduction.policy, Mortality.reduction.tax, risk) %>%
rename(policy = Mortality.reduction.policy, tax = Mortality.reduction.tax) %>%
gather(Code, Impact, -cause_name, -risk, -location_name) %>%
unite(group, risk, Code) %>% spread(group, Impact) %>%
left_join(ta_delay, by = "cause_name") %>%
mutate(Alcohol_policy = ifelse(is.na(Alcohol_policy), 0, Alcohol_policy*Alcohol),
Alcohol_tax = ifelse(is.na(Alcohol_tax), 0, Alcohol_tax*Alcohol),
Smoking_policy = ifelse(is.na(Smoking_policy), 0, Smoking_policy*Smoking),
Smoking_tax = ifelse(is.na(Smoking_tax), 0, Smoking_tax*Smoking))
pin.groups <- readxl::read_excel("new_inputs/DCP3_ NCD Data (SIDS).xlsx", sheet='costs') %>%
filter(NCD<=5.6) %>%
rename(Code = NCD) %>% filter(!is.na(Adjustment1)) %>%
rename(cause_name = Epi1, metric_name = Measure1,
age_l = StartAge1, age_u=StopAge1, sex_name=Sex1, Adjustment = Adjustment1) %>%
mutate(age_u = ifelse(age_u=="95+","85",age_u), age_u = as.numeric(age_u), age_l = as.numeric(age_l),
Adjustment = as.numeric(Adjustment)) %>%
select(calc_ICER, Code, sub_id, cause_name, metric_name, age_l, age_u, sex_name, Adjustment)
#might need to add some causes...
#https://vizhub.healthdata.org/gbd-results?params=gbd-api-2019-permalink/7e58e39f315fa0fe393bc75bd3b71be0
library(tidyverse)
add.causes<-fread("new_inputs/new_causes.csv")%>%
mutate(age = str_remove_all(age, " years"),
age = gsub("-", " to ", age),
age = ifelse(age=="85+", "85 plus", age))
pin.data   <- rbind(fread("new_inputs/PIN_heartfailuredata.csv"),
fread("new_inputs/pin_data (2).csv") %>%
mutate(rei = "None")) %>%
bind_rows(., add.causes)%>%
filter(location != "Global" & metric == "Rate" & cause != "All causes" & year == 2019) %>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c")) %>%
right_join(country.lab, by = "iso3") %>%
rename(age_cat = age, cause_name = cause, sex_name = sex) %>%
right_join(data.table(age_cat = c("<1 year", rep("1 to 4", each = 4),
rep(paste0(seq(5,80,5)," to ",seq(5,80,5)+4), each=5), "85 plus"),
age_name = 0:85),
by = "age_cat") %>%
select(location_name, sex_name, age_name, cause_name, measure, val) %>%
mutate(val = val*1e-5) %>% spread(measure, val) %>%
rename(R_inc  = Incidence, R_prev = Prevalence) %>%
mutate(R_inc  = ifelse(is.na(R_inc), 0, R_inc),
R_prev = ifelse(is.na(R_prev), 0, R_prev),
R_pop  = NA) %>%
rbind(wpp.in %>%
filter(year == 2019 & iso3 %in% unique(country.lab$iso3)) %>%
select(location_name, sex_name, age_name) %>%
mutate(cause_name = "All", R_inc = NA, R_prev = NA, R_pop = 1)) %>%
arrange(location_name, cause_name, sex_name, age_name)
age.code <- int.df %>% select(Code, agel, ageu) %>% distinct()
##############################################################################################################
# Ratio of yll to yld to calculate dalys
##############################################################################################################
#https://vizhub.healthdata.org/gbd-results?params=gbd-api-2019-permalink/db58dc39dd2077abc2d50fac17387ae4
addyld<-fread("new_inputs/new_yld.csv")%>%
select(val, cause, measure, location)%>%
spread(measure,val)%>%
rename(YLD = `YLDs (Years Lived with Disability)`,
YLL = `YLLs (Years of Life Lost)`)%>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c"))%>%
right_join(country.lab, by = "iso3")%>%
select(-location)
#update with self-harm YLLs
self.harm<- fread("new_inputs/YLDtoYLLratio.csv")%>%
filter(cause=="Self-harm")%>%
select(location, YLL)%>%
rename(sh_yll = YLL)%>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c"))%>%
right_join(country.lab, by = "iso3")%>%
select(-location)
addyld<-addyld%>%
left_join(., self.harm)%>%
mutate(YLL = ifelse(cause=="Bipolar disorder", sh_yll*0.051 ,YLL),
YLL = ifelse(cause=="Major depressive disorder", sh_yll*0.461 ,YLL),
YLL = ifelse(cause=="Schizophrenia", sh_yll*0.047 ,YLL))%>%
select(-sh_yll)
yldyll <- fread("new_inputs/YLDtoYLLratio.csv") %>%
mutate(iso3 = countrycode::countrycode(location, "country.name", "iso3c"))%>%
right_join(country.lab, by = "iso3")%>%
select(-location)%>%
bind_rows(., addyld)%>%
rename(cause_name = cause) %>%
mutate(scale = YLD/YLL,
scale = ifelse(is.na(scale),1,scale),
scale = ifelse(cause_name %in% c("Bipolar disorder",
"Major depressive disorder",
"Schizophrenia") & scale>6, 6, scale)) %>%
select(iso3, location_name, cause_name, scale) %>%
filter(cause_name %in% c("All Causes", cse_g$cause_name))
nonNCD.bg <- all.mx %>% filter(cause_name == "nonNCD") %>% arrange(iso3, sex_name, age_name)
NCD.bg    <- all.mx %>% filter(cause_name %!in% c("NCD", "nonNCD")) %>%
arrange(iso3, cause_name, sex_name, age_name)
##############################################################################################################
# COVID data from WHO
##############################################################################################################
covid.df<-fread("covid_df.csv")
drops <- c("ghe.in", "wpp.input", "efficacy", "efficacy2", "ta_delay",
"loc", "locs","coverage", "all.mx", "obs_wpp", "addyld", "add.causes",
"self.harm")
rm(list = c(drops,"drops"))
save.image(file = "new_inputs/PreppedData2023_SIDS.Rda")
###############################################################################################################################
###############################################################################################################################
# Generate output files that can be used to rank the interventions according to ICERs
rm(list=ls())
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../new_inputs/PreppedData2023_SIDS.Rda")
source("../utils/demmod_icer_rankb.R")
###############################################################################################################################
all.locs      <- c("Timor-Leste", "Maldives")
interventions <- int.df %>% filter(Code<5)%>% pull(Code) %>% unique() %>% sort() #run intersectoral policies separately
total         <- length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
time1<-Sys.time()
time1<-Sys.time()
for(is in all.locs){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
time2<-Sys.time()
time2-time1 #
View(int.df)
View(project_pop)
View(wpp.in)
###############################################################################################################################
all.locs      <- c("Maldives","Timor-Leste")
time1<-Sys.time()
for(is in all.locs){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
time2<-Sys.time()
time2-time1 #
wpp.in%>%filter(location_name=="Maldives")
View(wpp.in)
is<-"Maldives"
# Demographic data
wpp.ina     <- wpp.in %>%
filter(location_name == is & year %in% 2019:2030) %>% select(-c(location_name, iso3)) %>%
arrange(sex_name, age_name, year)
View(wpp.ina)
Nxa         <- wpp.ina %>%
select(sex_name, age_name, year, Nx) %>%
spread(year, Nx) %>% arrange(sex_name, age_name) %>%
select(-c(sex_name, age_name)) %>% as.matrix()
P[,1]                <- Nxa[,1]
# Defaults
P                    <- matrix(0, nrow = w, ncol = n+1)
# fixed parameters
n = 12; year0 = 2019; gender_lab = c("Female", "Male"); sex_ratio = 0.5;
x = 0:85; z = length(x); w = 2*z; ninters = length(inter)
# Defaults
P                    <- matrix(0, nrow = w, ncol = n+1)
P[,1]                <- Nxa[,1]
###############################################################################################################################
all.locs      <- c("Maldives","Timor-Leste")
interventions <- int.df %>% filter(Code<5)%>% pull(Code) %>% unique() %>% sort() #run intersectoral policies separately
total         <- length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
time1<-Sys.time()
for(is in all.locs){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
###############################################################################################################################
###############################################################################################################################
# Generate output files that can be used to rank the interventions according to ICERs
rm(list=ls())
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../new_inputs/PreppedData2023_SIDS.Rda")
source("../utils/demmod_icer_rankb.R")
###############################################################################################################################
all.locs      <- c("Maldives","Timor-Leste")
interventions <- int.df %>% filter(Code<5)%>% pull(Code) %>% unique() %>% sort() #run intersectoral policies separately
total         <- length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
time1<-Sys.time()
for(is in all.locs){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
all.locs<- c("Afghanistan")
time1<-Sys.time()
for(is in all.locs){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
#save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
time2<-Sys.time()
time2-time1 #
###############################################################################################################################
###############################################################################################################################
# Generate output files that can be used to rank the interventions according to ICERs
rm(list=ls())
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../new_inputs/PreppedData2023_SIDS.Rda")
source("../utils/demmod_icer_rankb.R")
all.locs      <-as.character(c("Maldives", "Timor-Leste")) #77 countries
interventions <- int.df %>% filter(Code<5)%>% pull(Code) %>% unique() %>% sort() #run intersectoral policies separately
total         <- length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
time1<-Sys.time()
for(is in all.locs){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
###############################################################################################################################
###############################################################################################################################
# Generate output files that can be used to rank the interventions according to ICERs
rm(list=ls())
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../new_inputs/PreppedData2023c.Rda")
source("../utils/demmod_icer_rankb.R")
all.locs<-c("Maldives", "Timor-Leste")
interventions <- int.df %>% filter(Code<5)%>% pull(Code) %>% unique() %>% sort() #run intersectoral policies separately
total         <- length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
time1<-Sys.time()
for(is in all.locs){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
all.locs<-c("Afghanistan", "Maldives", "Timor-Leste")
time1<-Sys.time()
for(is in all.locs){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
time2<-Sys.time()
time2-time1 #
hics<-read.csv("../new_inputs/country_groupings.csv", stringsAsFactors = F)%>%
filter(wb2021%in%c("HIC","UMIC"))%>%pull(location_gbd)
all.locs      <- data.frame(loc=c(countries[c(1:118, 120:126, 128:175)]))
# not palestine, not puerto rico
interventions <- int.df %>% filter(Code<5)%>% pull(Code) %>% unique() %>% sort() #run intersectoral policies separately
total         <- length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
time1<-Sys.time()
hics<-read.csv("../new_inputs/country_groupings.csv", stringsAsFactors = F)%>%
filter(wb2021%in%c("HIC","UMIC"))%>%pull(location_gbd)
all.locs      <- data.frame(loc=c(countries[c(1:118, 120:126, 128:175)]))
# not palestine, not puerto rico
all.locs      <-as.character(all.locs%>%filter(loc%!in%hics)%>%pull(loc)) #77 countries
# not palestine, not puerto rico
interventions <- int.df %>% filter(Code<5)%>% pull(Code) %>% unique() %>% sort() #run intersectoral policies separately
total         <- length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
time1<-Sys.time()
for(is in all.locs[1]){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
time2<-Sys.time()
time2-time1 #
###############################################################################################################################
###############################################################################################################################
# Generate output files that can be used to rank the interventions according to ICERs
rm(list=ls())
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../new_inputs/PreppedData2023c.Rda")
source("../utils/demmod_icer_rankb.R")
hics<-read.csv("../new_inputs/country_groupings.csv", stringsAsFactors = F)%>%
filter(wb2021%in%c("HIC","UMIC"))%>%pull(location_gbd)
all.locs      <- data.frame(loc=c(countries[c(1:118, 120:126, 128:175)]))
# not palestine, not puerto rico
all.locs      <-as.character(all.locs%>%filter(loc%!in%hics)%>%pull(loc)) #77 countries
interventions <- int.df %>% filter(Code<5)%>% pull(Code) %>% unique() %>% sort() #run intersectoral policies separately
total         <- length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
time1<-Sys.time()
for(is in all.locs[1]){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
time2<-Sys.time()
time2-time1 #
###############################################################################################################################
###############################################################################################################################
# Generate output files that can be used to rank the interventions according to ICERs
rm(list=ls())
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../new_inputs/PreppedData2023c.Rda")
source("../utils/demmod_icer_rankb.R")
hics<-read.csv("../new_inputs/country_groupings.csv", stringsAsFactors = F)%>%
filter(wb2021%in%c("HIC","UMIC"))%>%pull(location_gbd)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../new_inputs/PreppedData2023c.Rda")
source("../utils/demmod_icer_rankb.R")
hics<-read.csv("../new_inputs/country_groupings.csv", stringsAsFactors = F)%>%
filter(wb2021%in%c("HIC","UMIC"))%>%pull(location_gbd)
all.locs      <- data.frame(loc=c(countries[c(1:118, 120:126, 128:175)]))
# not palestine, not puerto rico
all.locs      <-as.character(all.locs%>%filter(loc%!in%hics)%>%pull(loc)) #77 countries
interventions <- int.df %>% filter(Code<5)%>% pull(Code) %>% unique() %>% sort() #run intersectoral policies separately
total         <- length(interventions)
sel.cse       <- cse_g %>% pull(cause_name) %>% unique()
all.locs<-all.locs[1]
time1<-Sys.time()
for(is in all.locs){
j = 1
k = 1
dadt.all.l<-all.pin.l     <- all.dalys.l <- all.q30.l <- list(total)
for(inter in interventions){
projection = project_pop(is, inter, 0.80, "no", sel.cse, "varying", "yes", "yes", 1)
all.pin.l[[k]]    = data.table(projection$pin.est)
all.dalys.l[[k]]  = data.table(projection$dalys) %>% mutate(Code = inter)
all.q30.l[[k]]    = data.table(projection$q30df) %>% mutate(Code = inter)
dadt.all.l[[k]]   = data.table(projection$DAdt)%>%mutate(Code = inter)
j = j + 1; k = k + 1
}
clinical.pin      <- rbindlist(all.pin.l)
clinical.dalys    <- rbindlist(all.dalys.l)
clinical.q30      <- rbindlist(all.q30.l)
clinical.dadt      <- rbindlist(dadt.all.l)
save(clinical.pin, clinical.dalys, clinical.q30, clinical.dadt, file = paste0("by_country/full_BCR_", is, ".Rda"))
}
