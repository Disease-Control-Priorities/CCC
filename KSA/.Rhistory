rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
# For formatting
'%!in%' <- function(x,y)!('%in%'(x,y)) # Function "Not In"
# If wanting to work in logit space
logit       <- function(x){qlogis(log(x), log.p = TRUE)}
invlogit    <- function(x){exp(plogis(x, log.p = TRUE))}
# Function to convert mortality rates by sex to life-expectancy (Mortality laws)
mxtoex      <- function(y){
y1=convertFx(x=0:85, data = y[1:86], from = "mx", to = "ex")
y2=convertFx(x=0:85, data = y[87:172], from = "mx", to = "ex")
c(y1,y2)
}
# Function to aggregate single ages to 5 year age-groups (by sex)
combine.ages5 <- function(pop){
get.sum <- function(pops){
ds      <- rep(NA, 19)
ds[1]   <- pops[1]
ds[2]   <- sum(pops[2:5])
k = 2
for (i in seq(5,80,5) + 1){
k = k + 1
j = i + 4
ds[k] <- sum(pops[i:j])
}
ds[19]  <- pops[86]
ds
}
popf <- get.sum(pop[1:86])
popm <- get.sum(pop[87:172])
c(popf,popm)
}
# Function to aggregate 5 year age-grouped males and females to persons
get.pers <- function(pop){
ds      <- rep(NA, 19)
for (i in 1:19){
ds[i] = pop[i] + pop[i + 19]
}
ds
}
# For persons
get.q30 <- function(mx){
calc.q <- function(mxs){100-100*prod(1 - (5 * mxs) / (1 + 2.5 * mxs))}
calc.q(mx[8:15])
}
q30.est <- function(P, D, n){
P05 <- apply(P, 2, combine.ages5)[, 1:n]
D05 <- apply(D, 2, combine.ages5)[, 1:n]
P05p <- apply(P05, 2, get.pers)
D05p <- apply(D05, 2, get.pers)
mx.p <- D05p/P05p
mx.p[is.na(mx.p)|mx.p < 0] <- 0
mx.p[mx.p > 1]    <- 0.999
apply(mx.p, 2, get.q30)
}
# By sex
q30.est.sex <- function(P, D, n){
P05 <- apply(P, 2, combine.ages5)[, 1:n]
D05 <- apply(D, 2, combine.ages5)[, 1:n]
Pf  <- P05[1:19,]; Df  <- D05[1:19,]
Pm  <- P05[20:38,]; Dm <- D05[20:38,]
mx.f                       <- Df/Pf
mx.m                       <- Dm/Pm
get.q30 <- function(mx){
calc.q <- function(mxs){
mxs[is.na(mxs)|mxs < 0] <- 0
mxs[mxs > .999]              <- 0.999
1-prod(1 - (5 * mxs) / (1 + 2.5 * mxs))
}
calc.q(mx[8:15])
}
qf = apply(mx.f, 2, get.q30)
qm = apply(mx.m, 2, get.q30)
data.table(t(rbind(qf, qm))) %>%
mutate(year_id=2019:2050) %>% rename(Female = qf, Male = qm) %>%
gather(sex_name, val, -year_id)
}
load("../new_inputs/WPP_input_data.Rda")
locs          <- wpp.input %>% select(location_name, iso3) %>% distinct()
View(locs)
View(locs)
locs          <- wpp.input %>% select(location_name, iso3) %>% distinct()
wpp.in        <- wpp.input %>% filter(year_id > 2009 & year_id < 2052) %>%
rename(age_name = age, year = year_id) %>% arrange(iso3, sex_name, year, age_name)
