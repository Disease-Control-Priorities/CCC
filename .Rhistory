shiny::runApp('RTSL_cost/HTN-cost-model')
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
'%!in%' <- function(x,y)!('%in%'(x,y)) # Function "Not In"
load("for_parallel_processing/output2023_target_intersectoral.Rda")
all.dalys%>%
filter(location_name=="India", Code==5.1)%>%
summarise(DALYS.ave = sum(DALY.ave))
dalys<-all.dalys%>%
filter(location_name=="India", Code==5.1)%>%
group_by(year_id)%>%
summarise(DALYS.ave = sum(DALY.ave))%>%
mutate(year_id = as.numeric(year_id))
dadt.all%>%
filter(location_name=="India", Code==5.1)%>%
summarise(Deaths.Avert = sum(Deaths.Avert))
deaths<-dadt.all%>%
filter(location_name=="India", Code==5.1)%>%
group_by(year_id)%>%
summarise(Deaths.Avert = sum(Deaths.Avert))
uc<-read.csv("output/unit_costs/India_adjusted_uc_2020.csv")%>%
filter(NCD==5.1)%>%pull(adjusted_uc)
cost<-all.pin%>%filter(Code==5.1, location_name == "India")%>%
mutate(cost = pin*uc)%>%
select(year_id, group, cost)%>%
spread(group, cost)%>%
filter(year_id>=2023)%>%
rename(Adjusted.cost = Adjusted,
Baseline.cost = Baseline)%>%
left_join(., dalys)%>%
left_join(., deaths)
value.daly<-read.csv("DALY_value.csv")
View(value.daly)
ccc.vsl<-read.csv("DALY_value.csv", stringsAsFactors = F)%>%
gather(year_id, val, -wb2021)%>%
mutate(year_id = as.numeric(gsub("X","",year_id)))
View(ccc.vsl)
View(ccc.vsl)
ccc.vsl<-read.csv("DALY_value.csv", stringsAsFactors = F)%>%
gather(year_id, val, -wb2021)%>%
mutate(year_id = as.numeric(gsub("X","",year_id)))%>%
filter(WB_Region == "LMIC")
ccc.vsl<-read.csv("DALY_value.csv", stringsAsFactors = F)%>%
gather(year_id, val, -wb2021)%>%
mutate(year_id = as.numeric(gsub("X","",year_id)))%>%
filter(wb2021 == "LMIC")
View(ccc.vsl)
ccc.vsl<-read.csv("DALY_value.csv", stringsAsFactors = F)%>%
gather(year_id, val, -wb2021)%>%
mutate(year_id = as.numeric(gsub("X","",year_id)))%>%
filter(wb2021 == "LMIC")%>%
select(wb2021)
cost<-all.pin%>%filter(Code==5.1, location_name == "India")%>%
mutate(cost = pin*uc)%>%
select(year_id, group, cost)%>%
spread(group, cost)%>%
filter(year_id>=2023)%>%
rename(Adjusted.cost = Adjusted,
Baseline.cost = Baseline)%>%
left_join(., dalys)%>%
left_join(., deaths)%>%
mutate(discount.rate = ((1-0.08)^(year_id-2022)),
discount.rate = ifelse(year_id<2023,1,discount.rate))
View(cost)
cost<-all.pin%>%filter(Code==5.1, location_name == "India")%>%
mutate(cost = pin*uc)%>%
select(year_id, group, cost)%>%
spread(group, cost)%>%
filter(year_id>=2023)%>%
rename(Adjusted.cost = Adjusted,
Baseline.cost = Baseline)%>%
left_join(., dalys)%>%
left_join(., deaths)%>%
mutate(discount.rate = ((1-0.08)^(year_id-2022)),
discount.rate = ifelse(year_id<2023,1,discount.rate),
Adjusted.cost.discounted = Adjusted.cost*discount.rate,
DALYS.ave.discounteed = DALYS.ave*discount.rate)
View(cost)
out<-left_join(cost, ccc.vsl)
ccc.vsl<-read.csv("DALY_value.csv", stringsAsFactors = F)%>%
gather(year_id, val, -wb2021)%>%
mutate(year_id = as.numeric(gsub("X","",year_id)))%>%
filter(wb2021 == "LMIC")%>%
select(-wb2021)
out<-left_join(cost, ccc.vsl)
View(out)
out<-left_join(cost, ccc.vsl)%>%
mutate(gross.benefits = val*DALYS.ave.discounted)
cost<-all.pin%>%filter(Code==5.1, location_name == "India")%>%
mutate(cost = pin*uc)%>%
select(year_id, group, cost)%>%
spread(group, cost)%>%
filter(year_id>=2023)%>%
rename(Adjusted.cost = Adjusted,
Baseline.cost = Baseline)%>%
left_join(., dalys)%>%
left_join(., deaths)%>%
mutate(discount.rate = ((1-0.08)^(year_id-2022)),
discount.rate = ifelse(year_id<2023,1,discount.rate),
Adjusted.cost.discounted = Adjusted.cost*discount.rate,
DALYS.ave.discounted = DALYS.ave*discount.rate)
ccc.vsl<-read.csv("DALY_value.csv", stringsAsFactors = F)%>%
gather(year_id, val, -wb2021)%>%
mutate(year_id = as.numeric(gsub("X","",year_id)))%>%
filter(wb2021 == "LMIC")%>%
select(-wb2021)
out<-left_join(cost, ccc.vsl)%>%
mutate(gross.benefits = val*DALYS.ave.discounted)
out<-left_join(cost, ccc.vsl)%>%
mutate(gross.benefits = val*DALYS.ave.discounted,
forgone.surplus = gross.benefits*0.009)
View(out)
write.csv(cost, "output/India_tob_tax.csv")
write.csv(out, "output/India_tob_tax.csv")
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
pacman::p_load(data.table, dplyr, tidyr, progress, pspline, MortalityLaws)
# For formatting
'%!in%' <- function(x,y)!('%in%'(x,y)) # Function "Not In"
# If wanting to work in logit space
logit       <- function(x){qlogis(log(x), log.p = TRUE)}
invlogit    <- function(x){exp(plogis(x, log.p = TRUE))}
# Function to convert mortality rates by sex to life-expectancy (Mortality laws)
mxtoex      <- function(y){
y1=convertFx(x=0:85, data = y[1:86], from = "mx", to = "ex")
y2=convertFx(x=0:85, data = y[87:172], from = "mx", to = "ex")
c(y1,y2)
}
# Function to aggregate single ages to 5 year age-groups (by sex)
combine.ages5 <- function(pop){
get.sum <- function(pops){
ds      <- rep(NA, 19)
ds[1]   <- pops[1]
ds[2]   <- sum(pops[2:5])
k = 2
for (i in seq(5,80,5) + 1){
k = k + 1
j = i + 4
ds[k] <- sum(pops[i:j])
}
ds[19]  <- pops[86]
ds
}
popf <- get.sum(pop[1:86])
popm <- get.sum(pop[87:172])
c(popf,popm)
}
# Function to aggregate 5 year age-grouped males and females to persons
get.pers <- function(pop){
ds      <- rep(NA, 19)
for (i in 1:19){
ds[i] = pop[i] + pop[i + 19]
}
ds
}
# For persons
get.q30 <- function(mx){
calc.q <- function(mxs){100-100*prod(1 - (5 * mxs) / (1 + 2.5 * mxs))}
calc.q(mx[8:15])
}
q30.est <- function(P, D, n){
P05 <- apply(P, 2, combine.ages5)[, 1:n]
D05 <- apply(D, 2, combine.ages5)[, 1:n]
P05p <- apply(P05, 2, get.pers)
D05p <- apply(D05, 2, get.pers)
mx.p <- D05p/P05p
mx.p[is.na(mx.p)|mx.p < 0] <- 0
mx.p[mx.p > 1]    <- 0.999
apply(mx.p, 2, get.q30)
}
# By sex
q30.est.sex <- function(P, D, n){
P05 <- apply(P, 2, combine.ages5)[, 1:n]
D05 <- apply(D, 2, combine.ages5)[, 1:n]
Pf  <- P05[1:19,]; Df  <- D05[1:19,]
Pm  <- P05[20:38,]; Dm <- D05[20:38,]
mx.f                       <- Df/Pf
mx.m                       <- Dm/Pm
get.q30 <- function(mx){
calc.q <- function(mxs){
mxs[is.na(mxs)|mxs < 0] <- 0
mxs[mxs > .999]              <- 0.999
1-prod(1 - (5 * mxs) / (1 + 2.5 * mxs))
}
calc.q(mx[8:15])
}
qf = apply(mx.f, 2, get.q30)
qm = apply(mx.m, 2, get.q30)
data.table(t(rbind(qf, qm))) %>%
mutate(year_id=2019:2030) %>% rename(Female = qf, Male = qm) %>%
gather(sex_name, val, -year_id)
}
load("new_inputs/WPP_input_data.Rda")
locs          <- wpp.input %>% select(location_name, iso3) %>% distinct()
wpp.in        <- wpp.input %>% filter(year_id > 2009 & year_id < 2032) %>%
rename(age_name = age, year = year_id) %>% arrange(iso3, sex_name, year, age_name)
#calibrate to CCC data
pop.adj<-wpp.in%>%
left_join(., read.csv("new_inputs/country_groupings.csv", stringsAsFactors = F)%>%
select(iso3, wb2021))%>%
group_by(year, wb2021)%>%
summarise(pop = sum(Nx))%>%
left_join(., read.csv("ccc_pop.csv", stringsAsFactors = F)%>%
gather(year, ccc.pop, -region)%>%
mutate(year = as.numeric(gsub("X", "", year)),
ccc.pop = 1000000*as.numeric(ccc.pop),
region = ifelse(region=="LMC", "LMIC", region))%>%
rename(wb2021 = region))%>%
filter(wb2021=="LIC"| wb2021=="LMIC")%>%
mutate(adjustment = ifelse(is.na(ccc.pop),1, ccc.pop/pop))
wpp.in<-wpp.in%>%
left_join(., read.csv("new_inputs/country_groupings.csv", stringsAsFactors = F)%>%
select(iso3, wb2021))%>%
left_join(., pop.adj%>%select(wb2021, adjustment, year))%>%
mutate(adjustment = ifelse(is.na(adjustment),1, adjustment),
Nx = Nx*adjustment)%>%
select(-wb2021, -adjustment)
test<-wpp.in%>%filter(location_name=="India")%>%
group_by(year)%>%
summarise(pop = sum(Nx))
View(test)
write.csv(wpp.in%>%filter(location_name=="India")%>%
group_by(year)%>%
summarise(pop = sum(Nx)), "india_pop.csv")
#8%
atab1<-read.csv("Figures/clinical_full_2023_2030.csv")%>%
select(WB_Region, Intervention, DALYS.avert, BCR)%>%
gather(Metric, Base, -WB_Region, -Intervention)%>%
left_join(.,
read.csv("Figures/clinical_full_2023_2030_pesm.csv")%>%
select(WB_Region, Intervention, DALYS.avert, BCR)%>%
gather(Metric, Pessimistic, -WB_Region, -Intervention)
)%>%
left_join(.,
read.csv("Figures/clinical_full_2023_2030_optm.csv")%>%
select(WB_Region, Intervention, DALYS.avert, BCR)%>%
gather(Metric, Optimistic, -WB_Region, -Intervention)
)%>%
arrange(WB_Region, Intervention, Metric, -Base)
View(atab1)
write.csv(atab1, "Figures/Appendix_Table_8percent.csv", row.names = F)
#5%
atab2<-read.csv("Figures/clinical_full_2023_2030_5perc.csv")%>%
select(WB_Region, Intervention, DALYS.avert, BCR)%>%
gather(Metric, Base, -WB_Region, -Intervention)%>%
left_join(.,
read.csv("Figures/clinical_full_2023_2030_pesm_5perc.csv")%>%
select(WB_Region, Intervention, DALYS.avert, BCR)%>%
gather(Metric, Pessimistic, -WB_Region, -Intervention)
)%>%
left_join(.,
read.csv("Figures/clinical_full_2023_2030_optm_5perc.csv")%>%
select(WB_Region, Intervention, DALYS.avert, BCR)%>%
gather(Metric, Optimistic, -WB_Region, -Intervention)
)%>%
arrange(WB_Region, Intervention, Metric, -Base)
View(atab2)
write.csv(atab2, "Figures/Appendix_Table_5percent.csv", row.names = F)
#14%
atab3<-read.csv("Figures/clinical_full_2023_2030_14perc.csv")%>%
select(WB_Region, Intervention, DALYS.avert, BCR)%>%
gather(Metric, Base, -WB_Region, -Intervention)%>%
left_join(.,
read.csv("Figures/clinical_full_2023_2030_pesm_14perc.csv")%>%
select(WB_Region, Intervention, DALYS.avert, BCR)%>%
gather(Metric, Pessimistic, -WB_Region, -Intervention)
)%>%
left_join(.,
read.csv("Figures/clinical_full_2023_2030_optm_14perc.csv")%>%
select(WB_Region, Intervention, DALYS.avert, BCR)%>%
gather(Metric, Optimistic, -WB_Region, -Intervention)
)%>%
arrange(WB_Region, Intervention, Metric, -Base)
View(atab3)
write.csv(atab3, "Figures/Appendix_Table_14percent.csv", row.names = F)
load("C:/Users/sarah/Documents/NCDC-WHO/app_basic_1.Rda")
View(dadt.all)
